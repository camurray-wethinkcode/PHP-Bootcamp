
<- Matrix ----------------------------------------------------------------------
With vertices, one can position points in space. With vectors, it can represent movements in space. With matrices, we will be able to operate transformations, such as apply
a scale change, a translation or a rotation to one or several vertices.

This Matrix Class has seven Class constants: IDENTITY, SCALE, RX, RY, RZ, TRANSLATION and PROJECTION.

The Class’ constructor is waiting for an array. The following keys are required:
’preset’: the matrix type to, mandatory. The value must be one of the Class
constants previoulsy defined.
’scale’: the scale factor, mandatory when ’preset’ is worth SCALE.
’angle’: the rotation angle in radians, mandatory when ’preset’ is worth RX, RY
or RZ.
’vtc’: translation vector, mandatory when ’preset’ is worth TRANSLATION.
’fov’: projection field of view in degrees mandatory when ’preset’ is worth PROJECTION.
’ratio’: projected image ratio, mandatory when ’preset’ is worth PROJECTION.
’near’: projection’s near clipping plane mandatory when ’preset’ is worth PROJECTION.
’far’: projection’s far clipping plane mandatory when ’preset’ is worth PROJECTION.

Two public functions are available:
Matrix mult( Matrix $rhs ) : returns the multiplication of both matrices.
Vertex transformVertex( Vertex $vtx ) : returns a new vertex resulting from
the transformation of the vertex by the matrix.
---------------------------------------------------------------------- Matrix ->
